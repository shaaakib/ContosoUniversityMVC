// <auto-generated />
using System;
using ContosoUniversity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContosoUniversity.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20240829065818_SeedDataDb")]
    partial class SeedDataDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContosoUniversity.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Credits = 3,
                            Title = "Chemistry"
                        },
                        new
                        {
                            CourseId = 2,
                            Credits = 3,
                            Title = "Microeconomics"
                        },
                        new
                        {
                            CourseId = 3,
                            Credits = 3,
                            Title = "Macroeconomics"
                        },
                        new
                        {
                            CourseId = 4,
                            Credits = 4,
                            Title = "Calculus"
                        },
                        new
                        {
                            CourseId = 5,
                            Credits = 4,
                            Title = "Trigonometry"
                        },
                        new
                        {
                            CourseId = 6,
                            Credits = 3,
                            Title = "Composition"
                        },
                        new
                        {
                            CourseId = 7,
                            Credits = 4,
                            Title = "Literature"
                        });
                });

            modelBuilder.Entity("ContosoUniversity.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentID"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            CourseId = 1,
                            Grade = 0,
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 2,
                            CourseId = 2,
                            Grade = 2,
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 3,
                            CourseId = 3,
                            Grade = 1,
                            StudentID = 1
                        },
                        new
                        {
                            EnrollmentID = 4,
                            CourseId = 4,
                            Grade = 1,
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 5,
                            CourseId = 5,
                            Grade = 4,
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 6,
                            CourseId = 6,
                            Grade = 4,
                            StudentID = 2
                        },
                        new
                        {
                            EnrollmentID = 7,
                            CourseId = 1,
                            StudentID = 3
                        },
                        new
                        {
                            EnrollmentID = 8,
                            CourseId = 1,
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 9,
                            CourseId = 2,
                            Grade = 4,
                            StudentID = 4
                        },
                        new
                        {
                            EnrollmentID = 10,
                            CourseId = 3,
                            Grade = 2,
                            StudentID = 5
                        },
                        new
                        {
                            EnrollmentID = 11,
                            CourseId = 4,
                            StudentID = 6
                        },
                        new
                        {
                            EnrollmentID = 12,
                            CourseId = 5,
                            Grade = 0,
                            StudentID = 7
                        });
                });

            modelBuilder.Entity("ContosoUniversity.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EnrollmentDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Carson Alexander"
                        },
                        new
                        {
                            ID = 2,
                            EnrollmentDate = new DateTime(2017, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Meredith Alonso"
                        },
                        new
                        {
                            ID = 3,
                            EnrollmentDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arturo Anand"
                        },
                        new
                        {
                            ID = 4,
                            EnrollmentDate = new DateTime(2017, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gytis Barzdukas"
                        },
                        new
                        {
                            ID = 5,
                            EnrollmentDate = new DateTime(2017, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yan Li"
                        },
                        new
                        {
                            ID = 6,
                            EnrollmentDate = new DateTime(2016, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peggy Justice"
                        },
                        new
                        {
                            ID = 7,
                            EnrollmentDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laura Norman"
                        },
                        new
                        {
                            ID = 8,
                            EnrollmentDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nino Olivetto"
                        });
                });

            modelBuilder.Entity("ContosoUniversity.Models.Enrollment", b =>
                {
                    b.HasOne("ContosoUniversity.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContosoUniversity.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("ContosoUniversity.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
